library(shiny)
library(DT)

# Define UI for application
ui <- fluidPage(
    titlePanel("Análisis de Datos"),
    
    sidebarLayout(
        sidebarPanel(
            fileInput("file", "Seleccione el archivo de datos (txt)"),
            tags$hr(),
            helpText("Recuerda que los datos perdidos o faltantes se indican con un punto (.) en el conjunto de datos.")
        ),
        
        mainPanel(
            tabsetPanel(
                tabPanel("Resumen", 
                         h4("Resumen de Datos"),
                         verbatimTextOutput("summary")),
                
                tabPanel("Resultados", 
                         h4("Resultados"),
                         verbatimTextOutput("results")),
                
                tabPanel("Tabla Original", 
                         DTOutput("original_table")),
                
                tabPanel("Tabla sin Faltantes", 
                         DTOutput("clean_table"))
            )
        )
    ),
    
    # Estilos CSS personalizados
    tags$head(
        tags$style(HTML("
      body {
        font-family: Arial, sans-serif;
        background-color: #f3f3f3;
      }
      .tab-content {
        padding: 20px;
      }
    "))
    )
)

# Define server logic
server <- function(input, output) {
    
    # Cargar y analizar los datos al seleccionar un archivo
    data <- reactive({
        req(input$file)
        inFile <- input$file
        if (is.null(inFile))
            return(NULL)
        read.table(inFile$datapath, header = TRUE, sep = ",")
    })
    
    # Resumen de los datos
    output$summary <- renderPrint({
        data <- data()
        cat("Número de registros en la base de datos:", nrow(data), "\n")
        cat("Número de variables en la base de datos:", ncol(data), "\n")
        registros_completos <- sum(rowSums(is.na(data) | data == ".") == 0)
        cat("Dimensión de la base resultante (sin datos faltantes):", registros_completos, "registros,", ncol(data), "variables\n")
    })
    
    # Remover registros con datos faltantes y mostrar la dimensión resultante
    output$results <- renderPrint({
        data <- data()
        registros_completos <- sum(rowSums(is.na(data) | data == ".") == 0)
        cat("Dimensión de la base resultante (sin datos faltantes):", registros_completos, "registros,", ncol(data), "variables\n")
    })
    
    # Mostrar la tabla de datos original
    output$original_table <- renderDT({
        data <- data()
        datatable(data)
    })
    
    # Mostrar la tabla de datos sin faltantes
    output$clean_table <- renderDT({
        data <- data()
        data_sin_faltantes <- na.omit(data)
        datatable(data_sin_faltantes)
    })
}

# Run the application 
shinyApp(ui = ui, server = server)
